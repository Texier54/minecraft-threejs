var Y0=Object.defineProperty;var E0=(I,G,y)=>G in I?Y0(I,G,{enumerable:!0,configurable:!0,writable:!0,value:y}):I[G]=y;var r0=(I,G,y)=>E0(I,typeof G!="symbol"?G+"":G,y);(function(){"use strict";class I{constructor(e){r0(this,"m_w",123456789);r0(this,"m_z",987654321);r0(this,"mask",4294967295);this.m_w=123456789+e&this.mask,this.m_z=987654321-e&this.mask}random(){this.m_z=36969*(this.m_z&65535)+(this.m_z>>16)&this.mask,this.m_w=18e3*(this.m_w&65535)+(this.m_w>>16)&this.mask;let e=(this.m_z<<16)+(this.m_w&65535)>>>0;return e/=4294967296,e}}class G{constructor(e=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let t=0;t<256;t++)this.p[t]=Math.floor(e.random()*256);this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[t&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}dot(e,t,n){return e[0]*t+e[1]*n}dot3(e,t,n,s){return e[0]*t+e[1]*n+e[2]*s}dot4(e,t,n,s,c){return e[0]*t+e[1]*n+e[2]*s+e[3]*c}noise(e,t){let n,s,c;const f=.5*(Math.sqrt(3)-1),i=(e+t)*f,p=Math.floor(e+i),l=Math.floor(t+i),m=(3-Math.sqrt(3))/6,k=(p+l)*m,a=p-k,o=l-k,b=e-a,g=t-o;let h,z;b>g?(h=1,z=0):(h=0,z=1);const M=b-h+m,_=g-z+m,w=b-1+2*m,T=g-1+2*m,j=p&255,q=l&255,B=this.perm[j+this.perm[q]]%12,u=this.perm[j+h+this.perm[q+z]]%12,r=this.perm[j+1+this.perm[q+1]]%12;let x=.5-b*b-g*g;x<0?n=0:(x*=x,n=x*x*this.dot(this.grad3[B],b,g));let v=.5-M*M-_*_;v<0?s=0:(v*=v,s=v*v*this.dot(this.grad3[u],M,_));let F=.5-w*w-T*T;return F<0?c=0:(F*=F,c=F*F*this.dot(this.grad3[r],w,T)),70*(n+s+c)}noise3d(e,t,n){let s,c,f,i;const l=(e+t+n)*.3333333333333333,m=Math.floor(e+l),k=Math.floor(t+l),a=Math.floor(n+l),o=1/6,b=(m+k+a)*o,g=m-b,h=k-b,z=a-b,M=e-g,_=t-h,w=n-z;let T,j,q,B,u,r;M>=_?_>=w?(T=1,j=0,q=0,B=1,u=1,r=0):M>=w?(T=1,j=0,q=0,B=1,u=0,r=1):(T=0,j=0,q=1,B=1,u=0,r=1):_<w?(T=0,j=0,q=1,B=0,u=1,r=1):M<w?(T=0,j=1,q=0,B=0,u=1,r=1):(T=0,j=1,q=0,B=1,u=1,r=0);const x=M-T+o,v=_-j+o,F=w-q+o,W=M-B+2*o,X=_-u+2*o,A=w-r+2*o,J=M-1+3*o,K=_-1+3*o,O=w-1+3*o,L=m&255,N=k&255,Y=a&255,o0=this.perm[L+this.perm[N+this.perm[Y]]]%12,i0=this.perm[L+T+this.perm[N+j+this.perm[Y+q]]]%12,c0=this.perm[L+B+this.perm[N+u+this.perm[Y+r]]]%12,l0=this.perm[L+1+this.perm[N+1+this.perm[Y+1]]]%12;let C=.6-M*M-_*_-w*w;C<0?s=0:(C*=C,s=C*C*this.dot3(this.grad3[o0],M,_,w));let H=.6-x*x-v*v-F*F;H<0?c=0:(H*=H,c=H*H*this.dot3(this.grad3[i0],x,v,F));let V=.6-W*W-X*X-A*A;V<0?f=0:(V*=V,f=V*V*this.dot3(this.grad3[c0],W,X,A));let D=.6-J*J-K*K-O*O;return D<0?i=0:(D*=D,i=D*D*this.dot3(this.grad3[l0],J,K,O)),32*(s+c+f+i)}noise4d(e,t,n,s){const c=this.grad4,f=this.simplex,i=this.perm,p=(Math.sqrt(5)-1)/4,l=(5-Math.sqrt(5))/20;let m,k,a,o,b;const g=(e+t+n+s)*p,h=Math.floor(e+g),z=Math.floor(t+g),M=Math.floor(n+g),_=Math.floor(s+g),w=(h+z+M+_)*l,T=h-w,j=z-w,q=M-w,B=_-w,u=e-T,r=t-j,x=n-q,v=s-B,F=u>r?32:0,W=u>x?16:0,X=r>x?8:0,A=u>v?4:0,J=r>v?2:0,K=x>v?1:0,O=F+W+X+A+J+K,L=f[O][0]>=3?1:0,N=f[O][1]>=3?1:0,Y=f[O][2]>=3?1:0,o0=f[O][3]>=3?1:0,i0=f[O][0]>=2?1:0,c0=f[O][1]>=2?1:0,l0=f[O][2]>=2?1:0,C=f[O][3]>=2?1:0,H=f[O][0]>=1?1:0,V=f[O][1]>=1?1:0,D=f[O][2]>=1?1:0,v0=f[O][3]>=1?1:0,f0=u-L+l,a0=r-N+l,d0=x-Y+l,m0=v-o0+l,h0=u-i0+2*l,u0=r-c0+2*l,b0=x-l0+2*l,g0=v-C+2*l,y0=u-H+3*l,p0=r-V+3*l,M0=x-D+3*l,x0=v-v0+3*l,k0=u-1+4*l,z0=r-1+4*l,w0=x-1+4*l,_0=v-1+4*l,P=h&255,Q=z&255,U=M&255,Z=_&255,V0=i[P+i[Q+i[U+i[Z]]]]%32,D0=i[P+L+i[Q+N+i[U+Y+i[Z+o0]]]]%32,I0=i[P+i0+i[Q+c0+i[U+l0+i[Z+C]]]]%32,L0=i[P+H+i[Q+V+i[U+D+i[Z+v0]]]]%32,N0=i[P+1+i[Q+1+i[U+1+i[Z+1]]]]%32;let $=.6-u*u-r*r-x*x-v*v;$<0?m=0:($*=$,m=$*$*this.dot4(c[V0],u,r,x,v));let S=.6-f0*f0-a0*a0-d0*d0-m0*m0;S<0?k=0:(S*=S,k=S*S*this.dot4(c[D0],f0,a0,d0,m0));let t0=.6-h0*h0-u0*u0-b0*b0-g0*g0;t0<0?a=0:(t0*=t0,a=t0*t0*this.dot4(c[I0],h0,u0,b0,g0));let e0=.6-y0*y0-p0*p0-M0*M0-x0*x0;e0<0?o=0:(e0*=e0,o=e0*e0*this.dot4(c[L0],y0,p0,M0,x0));let s0=.6-k0*k0-z0*z0-w0*w0-_0*_0;return s0<0?b=0:(s0*=s0,b=s0*s0*this.dot4(c[N0],k0,z0,w0,_0)),27*(m+k+a+o+b)}}const y={empty:{id:0,name:"empty",visible:!1},grass:{id:1,name:"grass"},dirt:{id:2,name:"dirt"},bedrock:{id:7,name:"bedrock"},sand:{id:12,name:"sand"},gravel:{id:13,name:"gravel"},stone:{id:3,name:"stone",scale:{x:30,y:30,z:30},scarcity:.8},coalOre:{id:16,name:"coal_ore",scale:{x:20,y:20,z:20},scarcity:.8},ironOre:{id:15,name:"iron_ore",scale:{x:40,y:40,z:40},scarcity:.9},diamondOre:{id:56,name:"diamond_ore",scale:{x:40,y:40,z:40},scarcity:.99},log:{id:17,name:"log"},leaves:{id:18,name:"leaves"},craftingTable:{id:58,name:"Crafting Table"},cactus:{id:81,name:"cactus"},water:{id:9,name:"water"},lava:{id:11,name:"lava"},sandstone:{id:24,name:"sandstone"},obsidian:{id:49,name:"obsidian"}},R0=[y.coalOre,y.ironOre,y.diamondOre];function j0(d,e){let t=[];for(let n=0;n<d;n++){const s=[];for(let c=0;c<e;c++){const f=[];for(let i=0;i<d;i++)f.push({id:0,instanceId:null,inventory:null,direction:{x:0,y:0,z:0}});s.push(f)}t.push(s)}return t}function T0(d){let e=[];for(let t=0;t<d;t++){let n=[];for(let s=0;s<d;s++)n.push({});e.push(n)}return e}function q0(d,e,t,n,s,c,f){var l,m,k;const i=new G(n),p=t.seaLevel;for(let a=0;a<d;a++)for(let o=0;o<d;o++){let b=G0(i,a,o,s),g=b.biome1,h=g,z=b.biome2,M=b.blend;const _=t.biomes[g].scale,w=i.noise((s.x+a)/_,(s.z+o)/_);let T=t.biomes[g].offset+t.biomes[g].magnitude*w;const j=t.biomes[z].scale,q=i.noise((s.x+a)/j,(s.z+o)/j);let B=t.biomes[z].offset+t.biomes[z].magnitude*q,u=Math.floor(C0(T,B,M)*e);u=Math.max(1,Math.min(u,e-1)),typeof f[a][o]<"u"&&(f[a][o]=g);for(let r=0;r<e;r++)if(r<u&&r>u-3&&((l=E(c,a,r,o))==null?void 0:l.id)===y.empty.id&&(h=="desert"||h=="beach"?R(c,a,r,o,y.sandstone.id):R(c,a,r,o,y.dirt.id)),r==0)R(c,a,r,o,y.bedrock.id);else if(r<u&&((m=E(c,a,r,o))==null?void 0:m.id)===y.empty.id)R(c,a,r,o,y.stone.id),F0(n,a,r,o,s,c),H0(i,a,r,o,s,c);else if(r==u){h=="plains"||h=="forest"||h=="mountains"?R(c,a,r,o,y.grass.id):(h=="beach",R(c,a,r,o,y.sand.id));let x=1;h=="forest"&&(x=6),h=="mountains"&&(x=.5),h!="ocean"&&h!="beach"&&Math.random()<t.trees.frequency*x&&O0(t.seed,h,a,u+1,o,t,c)}else h==="ocean"&&r<u?R(c,a,r,o,y.stone.id):h==="ocean"&&r>=u&&r<p&&R(c,a,r,o,(k=y.water)==null?void 0:k.id)}return{data:c,biomes:f}}function R(d,e,t,n,s){n0(e,t,n)&&(d[e][t][n].id=s)}function E(d,e,t,n){return n0(e,t,n)&&typeof d[e]<"u"?d[e][t][n]:null}function n0(d,e,t){return d>=0&&d<16&&t>=0&&t<16&&e>=0&&e<80}function O0(d,e,t,n,s,c,f){const i=c.trees.trunk.minHeight,p=c.trees.trunk.maxHeight,l=Math.round(i+(p-i)*Math.random()+1);for(let m=n;m<n+l;m++)e=="desert"?R(f,t,m,s,y.cactus.id):R(f,t,m,s,y.log.id);e!="desert"&&B0(e,t,n+l,s,c,f)}function B0(d,e,t,n,s,c){const f=s.trees.canopy.minRadius,i=s.trees.canopy.maxRadius,p=Math.round(f+(i-f)*Math.random());for(let l=-p;l<=p;l++)for(let m=-p;m<=p;m++)for(let k=-p;k<=p;k++){const a=Math.random();if(l*l+m*m+k*k>p*p)continue;const o=E(c,e+l,t+m,n+k);o&&o.id!==y.empty.id||a<s.trees.canopy.density&&E(c,e+l,t+m,n+k)!==null&&R(c,e+l,t+m,n+k,y.leaves.id)}}function F0(d,e,t,n,s,c){const f=new G(d);R0.forEach(i=>{f.noise((s.x+e)/i.scale.x,(s.y+t)/i.scale.y,(s.z+n)/i.scale.z)>i.scarcity&&R(c,e,t,n,i.id)})}function G0(d,e,t,n){let s=d.noise((n.x+e)/500,(n.z+t)/500);return s+=.2*d.noise((n.x+e)/250,(n.z+t)/250),s=(s+1)/2,s<.07?{biome1:"ocean",biome2:"ocean",blend:0}:s<.09?{biome1:"ocean",biome2:"beach",blend:(s-.07)/.02}:s<.115?{biome1:"beach",biome2:"plains",blend:(s-.09)/.025}:s<.2?{biome1:"plains",biome2:"desert",blend:(s-.09)/.11}:s<.4?{biome1:"desert",biome2:"forest",blend:(s-.2)/.2}:s<.6?{biome1:"forest",biome2:"mountains",blend:(s-.4)/.2}:{biome1:"mountains",biome2:"mountains",blend:(s-.6)/.4}}function C0(d,e,t){return d+t*(e-d)}function H0(d,e,t,n,s,c){if(t<=4||t>=60)return;const f=s.x+e,i=s.y+t,p=s.z+n,l=.035,m=(d.noise(f*l,i*l,p*l)+d.noise(i*l,p*l,f*l)+d.noise(p*l,f*l,i*l))/3,k=d.noise((f+57)*.11,(i-13)*.11,(p+29)*.11);if(m>.18&&m<.24&&k>0){for(let o=-2;o<=2;o++)for(let b=-2;b<=2;b++)for(let g=-2;g<=2;g++)if(o*o+b*b+g*g<=2*2){const h=e+o,z=t+b,M=n+g;n0(h,z,M)&&R(c,h,z,M,y.empty.id)}if(t<=30&&Math.random()<.02){for(let o=-2;o<=2;o++)for(let b=-2;b<=2;b++)if(o*o+b*b<=2*2){const g=e+o,h=n+b,z=t-1;if(n0(g,z,h)){const M=E(c,g,z,h);M&&M.id===y.empty.id&&R(c,g,z,h,y.lava.id)}}}}}self.onmessage=function(d){const{chunkData:e,chunkSize:t,chunkHeight:n,params:s,position:c}=d.data,f=new I(s.seed),i=j0(t,n),p=T0(t),l=q0(t,n,s,f,c,i,p);self.postMessage({data:l.data,biomes:l.biomes})}})();
