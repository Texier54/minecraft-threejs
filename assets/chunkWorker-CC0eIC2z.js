var Y0=Object.defineProperty;var E0=(I,G,p)=>G in I?Y0(I,G,{enumerable:!0,configurable:!0,writable:!0,value:p}):I[G]=p;var l0=(I,G,p)=>E0(I,typeof G!="symbol"?G+"":G,p);(function(){"use strict";class I{constructor(e){l0(this,"m_w",123456789);l0(this,"m_z",987654321);l0(this,"mask",4294967295);this.m_w=123456789+e&this.mask,this.m_z=987654321-e&this.mask}random(){this.m_z=36969*(this.m_z&65535)+(this.m_z>>16)&this.mask,this.m_w=18e3*(this.m_w&65535)+(this.m_w>>16)&this.mask;let e=(this.m_z<<16)+(this.m_w&65535)>>>0;return e/=4294967296,e}}class G{constructor(e=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let t=0;t<256;t++)this.p[t]=Math.floor(e.random()*256);this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[t&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}dot(e,t,n){return e[0]*t+e[1]*n}dot3(e,t,n,s){return e[0]*t+e[1]*n+e[2]*s}dot4(e,t,n,s,c){return e[0]*t+e[1]*n+e[2]*s+e[3]*c}noise(e,t){let n,s,c;const f=.5*(Math.sqrt(3)-1),o=(e+t)*f,u=Math.floor(e+o),l=Math.floor(t+o),i=(3-Math.sqrt(3))/6,r=(u+l)*i,O=u-r,d=l-r,y=e-O,j=t-d;let q,R;y>j?(q=1,R=0):(q=0,R=1);const z=y-q+i,_=j-R+i,g=y-1+2*i,w=j-1+2*i,v=u&255,b=l&255,m=this.perm[v+this.perm[b]]%12,h=this.perm[v+q+this.perm[b+R]]%12,M=this.perm[v+1+this.perm[b+1]]%12;let x=.5-y*y-j*j;x<0?n=0:(x*=x,n=x*x*this.dot(this.grad3[m],y,j));let k=.5-z*z-_*_;k<0?s=0:(k*=k,s=k*k*this.dot(this.grad3[h],z,_));let F=.5-g*g-w*w;return F<0?c=0:(F*=F,c=F*F*this.dot(this.grad3[M],g,w)),70*(n+s+c)}noise3d(e,t,n){let s,c,f,o;const l=(e+t+n)*.3333333333333333,i=Math.floor(e+l),r=Math.floor(t+l),O=Math.floor(n+l),d=1/6,y=(i+r+O)*d,j=i-y,q=r-y,R=O-y,z=e-j,_=t-q,g=n-R;let w,v,b,m,h,M;z>=_?_>=g?(w=1,v=0,b=0,m=1,h=1,M=0):z>=g?(w=1,v=0,b=0,m=1,h=0,M=1):(w=0,v=0,b=1,m=1,h=0,M=1):_<g?(w=0,v=0,b=1,m=0,h=1,M=1):z<g?(w=0,v=1,b=0,m=0,h=1,M=1):(w=0,v=1,b=0,m=1,h=1,M=0);const x=z-w+d,k=_-v+d,F=g-b+d,W=z-m+2*d,X=_-h+2*d,A=g-M+2*d,J=z-1+3*d,K=_-1+3*d,T=g-1+3*d,N=i&255,Y=r&255,E=O&255,n0=this.perm[N+this.perm[Y+this.perm[E]]]%12,o0=this.perm[N+w+this.perm[Y+v+this.perm[E+b]]]%12,i0=this.perm[N+m+this.perm[Y+h+this.perm[E+M]]]%12,c0=this.perm[N+1+this.perm[Y+1+this.perm[E+1]]]%12;let H=.6-z*z-_*_-g*g;H<0?s=0:(H*=H,s=H*H*this.dot3(this.grad3[n0],z,_,g));let V=.6-x*x-k*k-F*F;V<0?c=0:(V*=V,c=V*V*this.dot3(this.grad3[o0],x,k,F));let C=.6-W*W-X*X-A*A;C<0?f=0:(C*=C,f=C*C*this.dot3(this.grad3[i0],W,X,A));let D=.6-J*J-K*K-T*T;return D<0?o=0:(D*=D,o=D*D*this.dot3(this.grad3[c0],J,K,T)),32*(s+c+f+o)}noise4d(e,t,n,s){const c=this.grad4,f=this.simplex,o=this.perm,u=(Math.sqrt(5)-1)/4,l=(5-Math.sqrt(5))/20;let i,r,O,d,y;const j=(e+t+n+s)*u,q=Math.floor(e+j),R=Math.floor(t+j),z=Math.floor(n+j),_=Math.floor(s+j),g=(q+R+z+_)*l,w=q-g,v=R-g,b=z-g,m=_-g,h=e-w,M=t-v,x=n-b,k=s-m,F=h>M?32:0,W=h>x?16:0,X=M>x?8:0,A=h>k?4:0,J=M>k?2:0,K=x>k?1:0,T=F+W+X+A+J+K,N=f[T][0]>=3?1:0,Y=f[T][1]>=3?1:0,E=f[T][2]>=3?1:0,n0=f[T][3]>=3?1:0,o0=f[T][0]>=2?1:0,i0=f[T][1]>=2?1:0,c0=f[T][2]>=2?1:0,H=f[T][3]>=2?1:0,V=f[T][0]>=1?1:0,C=f[T][1]>=1?1:0,D=f[T][2]>=1?1:0,w0=f[T][3]>=1?1:0,r0=h-N+l,f0=M-Y+l,a0=x-E+l,m0=k-n0+l,d0=h-o0+2*l,h0=M-i0+2*l,u0=x-c0+2*l,g0=k-H+2*l,b0=h-V+3*l,p0=M-C+3*l,y0=x-D+3*l,M0=k-w0+3*l,x0=h-1+4*l,k0=M-1+4*l,z0=x-1+4*l,_0=k-1+4*l,L=q&255,P=R&255,Q=z&255,U=_&255,V0=o[L+o[P+o[Q+o[U]]]]%32,C0=o[L+N+o[P+Y+o[Q+E+o[U+n0]]]]%32,D0=o[L+o0+o[P+i0+o[Q+c0+o[U+H]]]]%32,I0=o[L+V+o[P+C+o[Q+D+o[U+w0]]]]%32,N0=o[L+1+o[P+1+o[Q+1+o[U+1]]]]%32;let Z=.6-h*h-M*M-x*x-k*k;Z<0?i=0:(Z*=Z,i=Z*Z*this.dot4(c[V0],h,M,x,k));let $=.6-r0*r0-f0*f0-a0*a0-m0*m0;$<0?r=0:($*=$,r=$*$*this.dot4(c[C0],r0,f0,a0,m0));let S=.6-d0*d0-h0*h0-u0*u0-g0*g0;S<0?O=0:(S*=S,O=S*S*this.dot4(c[D0],d0,h0,u0,g0));let t0=.6-b0*b0-p0*p0-y0*y0-M0*M0;t0<0?d=0:(t0*=t0,d=t0*t0*this.dot4(c[I0],b0,p0,y0,M0));let e0=.6-x0*x0-k0*k0-z0*z0-_0*_0;return e0<0?y=0:(e0*=e0,y=e0*e0*this.dot4(c[N0],x0,k0,z0,_0)),27*(i+r+O+d+y)}}const p={empty:{id:0,name:"empty",visible:!1},grass:{id:1,name:"grass"},dirt:{id:2,name:"dirt"},bedrock:{id:7,name:"bedrock"},sand:{id:12,name:"sand"},gravel:{id:13,name:"gravel"},stone:{id:3,name:"stone",scale:{x:30,y:30,z:30},scarcity:.8},coalOre:{id:16,name:"coal_ore",scale:{x:20,y:20,z:20},scarcity:.8},ironOre:{id:15,name:"iron_ore",scale:{x:40,y:40,z:40},scarcity:.9},diamondOre:{id:56,name:"diamond_ore",scale:{x:40,y:40,z:40},scarcity:.99},log:{id:17,name:"log"},leaves:{id:18,name:"leaves"},craftingTable:{id:58,name:"Crafting Table"},cactus:{id:81,name:"cactus"}},v0=[p.coalOre,p.ironOre,p.diamondOre];function T0(a,e){let t=[];for(let n=0;n<a;n++){const s=[];for(let c=0;c<e;c++){const f=[];for(let o=0;o<a;o++)f.push({id:0,instanceId:null,inventory:null,direction:{x:0,y:0,z:0}});s.push(f)}t.push(s)}return t}function O0(a){let e=[];for(let t=0;t<a;t++){let n=[];for(let s=0;s<a;s++)n.push({});e.push(n)}return e}function R0(a,e,t,n,s,c,f){var u,l;const o=new G(n);for(let i=0;i<a;i++)for(let r=0;r<a;r++){let O=G0(o,i,r,s),d=O.biome1,y=d,j=O.biome2,q=O.blend;const R=t.biomes[d].scale,z=o.noise((s.x+i)/R,(s.z+r)/R);let _=t.biomes[d].offset+t.biomes[d].magnitude*z;const g=t.biomes[j].scale,w=o.noise((s.x+i)/g,(s.z+r)/g);let v=t.biomes[j].offset+t.biomes[j].magnitude*w,b=Math.floor(H0(_,v,q)*e);b=Math.max(1,Math.min(b,e-1)),typeof f[i][r]<"u"&&(f[i][r]=d);for(let m=0;m<e;m++)if(m<b&&m>b-3&&((u=s0(c,i,m,r))==null?void 0:u.id)===p.empty.id&&B(c,i,m,r,p.dirt.id),m==0)B(c,i,m,r,p.bedrock.id);else if(m<b&&((l=s0(c,i,m,r))==null?void 0:l.id)===p.empty.id)B(c,i,m,r,p.stone.id),F0(n,i,m,r,s,c);else if(m==b){y=="plains"||y=="forest"||y=="mountains"?B(c,i,m,r,p.grass.id):B(c,i,m,r,p.sand.id);let h=1;y=="forest"&&(h=6),y=="mountains"&&(h=.5),Math.random()<t.trees.frequency*h&&q0(t.seed,y,i,b+1,r,t,c)}}return{data:c,biomes:f}}function B(a,e,t,n,s){j0(e,t,n)&&(a[e][t][n].id=s)}function s0(a,e,t,n){return j0(e,t,n)&&typeof a[e]<"u"?a[e][t][n]:null}function j0(a,e,t){return a>=0&&a<16&&t>=0&&t<16&&e>=0&&e<80}function q0(a,e,t,n,s,c,f){const o=c.trees.trunk.minHeight,u=c.trees.trunk.maxHeight,l=Math.round(o+(u-o)*Math.random()+1);for(let i=n;i<n+l;i++)e=="desert"?B(f,t,i,s,p.cactus.id):B(f,t,i,s,p.log.id);e!="desert"&&B0(e,t,n+l,s,c,f)}function B0(a,e,t,n,s,c){const f=s.trees.canopy.minRadius,o=s.trees.canopy.maxRadius,u=Math.round(f+(o-f)*Math.random());for(let l=-u;l<=u;l++)for(let i=-u;i<=u;i++)for(let r=-u;r<=u;r++){const O=Math.random();if(l*l+i*i+r*r>u*u)continue;const d=s0(c,e+l,t+i,n+r);d&&d.id!==p.empty.id||O<s.trees.canopy.density&&s0(c,e+l,t+i,n+r)!==null&&B(c,e+l,t+i,n+r,p.leaves.id)}}function F0(a,e,t,n,s,c){const f=new G(a);v0.forEach(o=>{f.noise((s.x+e)/o.scale.x,(s.y+t)/o.scale.y,(s.z+n)/o.scale.z)>o.scarcity&&B(c,e,t,n,o.id)})}function G0(a,e,t,n){let s=a.noise((n.x+e)/500,(n.z+t)/500);return s+=.2*a.noise((n.x+e)/250,(n.z+t)/250),s=(s+1)/2,s<.2?{biome1:"desert",biome2:"plains",blend:(s-.1)/.1}:s<.4?{biome1:"plains",biome2:"forest",blend:(s-.2)/.2}:s<.6?{biome1:"forest",biome2:"mountains",blend:(s-.4)/.2}:{biome1:"mountains",biome2:"mountains",blend:(s-.6)/.4}}function H0(a,e,t){return a+t*(e-a)}self.onmessage=function(a){const{chunkData:e,chunkSize:t,chunkHeight:n,params:s,position:c}=a.data,f=new I(s.seed),o=T0(t,n),u=O0(t),l=R0(t,n,s,f,c,o,u);self.postMessage({data:l.data,biomes:l.biomes})}})();
